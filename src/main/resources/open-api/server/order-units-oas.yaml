openapi: 3.0.3
info:
  title: Order Unit Service API - OpenAPI 3.0
  description: OUMS Microservices API
  version: 1.0.0
servers:
  - url: https://commerce-dep-tst.ah.nl/ah/merchandising/rpms-retail-price/v1
    description: Development
  - url: https://commerce-dep-tst.ah.nl/ah/merchandising/rpms-retail-price/v1
    description: Test
  - url: https://commerce-dep-tst.ah.nl/ah/merchandising/rpms-retail-price/v1
    description: Acceptance
tags:
  - name: OUMS Microservices
paths:
  /order-units:
    get:
      tags:
        - OUMS
      summary: Populate a list of order units based on given parameters
      description: Populate a list of order units based on given parameters
      operationId: findAllOrderUnits
      responses:
        200:
          description: A list of order units has been populated successfuly based on given parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreOrderUnit'
  /order-units/{orderUnitId}:
    get:
      tags:
        - OUMS Store Order Units
      summary: Retail Price For Retail Items
      description: Blended Format Prices and PriceZone Overrides
      operationId: findOrderUnit
      parameters:
        - name: orderUnitId
          in: path
          required: true
          schema:
            type: integer
        - name: storeGroupId
          in: query
          description: StoreGroup Id for which price required
          required: false
          explode: true
          schema:
            type: string
        - name: refDate
          in: query
          description: Retrieve all retail prices which are open/active status as of refDate
          required: false
          explode: true
          schema:
            type: string
            format: date
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreOrderUnit'
        400:
          description: Wrong Parameters provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        404:
          description: Retail Price Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
          x-amf-mediaType: application/json
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
      security:
        - apiKey: [ ]
components:
  schemas:
    StoreOrderUnit:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10801
        name:
          type: string
          example: appie macar
        variantId:
          type: integer
          example: 0
        multipleItemsOrderUnitId:
          type: integer
          example: 1
        depositFlag:
          type: boolean
          example: false
        loadCarrierType:
          type: string
          example: OVERIG
        orderUnitType:
          type: string
          example: S
        retailItems:
          type: array
          items:
            $ref: '#/components/schemas/RetailItem'
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/SupplierItem'
        storeOrderabilityPeriods:
          type: array
          items:
            $ref: '#/components/schemas/StoreOrderabilityPeriod'
    RetailItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        quantityPerOrderUnit:
          type: integer
          example: 12
    SupplierItem:
      type: object
      properties:
        supplier:
          $ref: '#/components/schemas/Supplier'
        dimensions:
          $ref: '#/components/schemas/Dimensions'
        weight:
          $ref: '#/components/schemas/Weight'
        dateDeliverableFrom:
          type: string
          format: date
          example: 2008-01-31
        dateDeliverableUntil:
          type: string
          format: date
          example: 2020-01-01
        countryOfOrigin:
          type: string
        countryOfDeparture:
          type: string
        shippingType:
          type: string
          example: CONTAINER
        globalTradeItemNumbers:
          type: array
          items:
            $ref: '#/components/schemas/GlobalTradeItemNumber'
        outerPackPeriods:
          type: array
          items:
            $ref: '#/components/schemas/OuterPackPeriod'
        palletPeriods:
          type: array
          items:
            $ref: '#/components/schemas/PalletPeriod'
        siteOrderabilityPeriods:
          type: array
          items:
            $ref: '#/components/schemas/SiteOrderabilityPeriod'
        offerPeriods:
          type: array
          items:
            $ref: '#/components/schemas/OfferPeriod'
    Supplier:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 248773
        name:
          type: string
          example: Supplier-name
          description: ADD REFERENCE DATA NAME IN APIs, NOT FOR KAFKA
        link:
          type: string
          example: /ah/merchandising/suppliers/248773
    Dimensions:
      type: object
      properties:
        width:
          type: integer
          example: 212
        length:
          type: integer
          example: 350
        height:
          type: integer
          example: 191
        unitOfMeasure:
          type: string
          example: MMT
    Weight:
      type: object
      properties:
        value:
          type: number
          format: float
          example: 6.5
        unitOfMeasure:
          type: string
          example: KGM
    GlobalTradeItemNumber:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 8718265927506
        dateValidFrom:
          type: string
          format: date
          example: 2011-10-07
        dateValidUntil:
          type: string
          format: date
          example: 2011-10-07
        link:
          type: string
          example: link to TIMS with this id as gtin filter
    OuterPackPeriod:
      type: object
      properties:
        dateValidFrom:
          type: string
          format: date
          example: 2020-08-15
        dateValidUntil:
          type: string
          format: date
          example: 2022-10-14
        unpackFlag:
          type: string
          example: null
        globalTradeItemNumber:
          type: string
          example: null
        loadCarrierTypeId:
          type: string
          example: null
        packagingTypeCode:
          type: string
          example: null
        quantity:
          type: integer
          example: 1
    PalletPeriod:
      type: object
      properties:
        dateValidFrom:
          type: string
          format: date
          example: 2020-08-15
        dateValidUntil:
          type: string
          format: date
          example: 2022-10-14
        layersPerPallet:
          type: integer
          example: 1
        quantityPerLayer:
          type: integer
          example: 1
        loadCarrierTypeId:
          type: string
          example: DIV-LC
        globalTradeItemNumber:
          type: string
          example: null
        packagingTypeCode:
          type: string
          example: 17
        orderMultiple:
          type: integer
          example: 1
    SiteOrderabilityPeriod:
      type: object
      properties:
        supplierDepotId:
          type: integer
          example: 1534
        storeOrderPickingUnitId:
          type: integer
          example: 14
        dateOrderableFrom:
          type: string
          format: date
          example: 1970-01-01
        dateOrderableUntil:
          type: string
          format: date
          example: null
    OfferPeriod:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: OFMS-UUID-OfferId (OFMS - id)
        name:
          type: string
          description: OFMS-Offer-Name (OFMS - name)
        link:
          type: string
          example: /offer/OFMS-UUID-OfferId
          description: Derived - link to OFMS for this offer on GET-by-id endpoint
        dateValidFrom:
          type: string
          format: date
          example: 2023-04-17
          description: OFMS - dateValidFrom
        dateValidUntil:
          type: string
          format: date
          example: 2023-04-18
          description: OFMS - dateValidUntil
        offerOrderabilityPeriods:
          type: array
          items:
            $ref: '#/components/schemas/OfferOrderabilityPeriod'
    OfferOrderabilityPeriod:
      type: object
      properties:
        supplierDepotId:
          type: integer
          example: 12
        storeOrderPickingUnitId:
          type: integer
          example: 14
        dateOrderableFrom:
          type: string
          format: date
          example: 2023-04-16
        dateOrderableUntil:
          type: string
          format: date
          example: 2023-05-05
    StoreOrderabilityPeriod:
      type: object
      properties:
        orderingType:
          type: string
          example: E
        dateOrderableFrom:
          type: string
          format: date
          example: 1990-12-03
        dateOrderableUntil:
          type: string
          format: date
          example: 1996-07-07
    ErrorResponse404:
      type: object
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/Error404'
        transactionId:
          type: string
          example: 3ea3f7b0-80f8-11eb-acc8-0205857feb80
    Error404:
      type: object
      properties:
        errorCode:
          type: string
          example: 404
        errorMessage:
          type: string
          example: Not Found
        errorDescription:
          type: string
          example: Retail Price Not Found
        errorDateTime:
          type: string
          format: date
          example: 2021-10-01T15:30:45.122
        bindingErrors:
          type: array
          items:
            $ref: '#/components/schemas/BindingError'
    ErrorResponse500:
      type: object
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/Error500'
        transactionId:
          type: string
          example: 3ea3f7b0-80f8-11eb-acc8-0205857feb80
    Error500:
      type: object
      properties:
        errorCode:
          type: string
          example: 500
        errorMessage:
          type: string
          example: Internal Server Occured
        errorDescription:
          type: string
          example: Server has Crashed, Retry
        errorDateTime:
          type: string
          format: date
          example: 2021-10-01T15:30:45.122
        bindingErrors:
          type: array
          items:
            $ref: '#/components/schemas/BindingError'
    ErrorResponse400:
      type: object
      properties:
        error:
          type: object
          allOf:
            - $ref: '#/components/schemas/Error400'
        transactionId:
          type: string
          example: 3ea3f7b0-80f8-11eb-acc8-0205857feb80
    Error400:
      type: object
      properties:
        errorCode:
          type: string
          example: 400
        errorMessage:
          type: string
          example: Not Found
        errorDescription:
          type: string
          example: Wrong query parameters provided
        errorDateTime:
          type: string
          format: date
          example: 2021-10-01T15:30:45.122
        bindingErrors:
          type: array
          items:
            $ref: '#/components/schemas/BindingError'
    BindingError:
      type: object
      properties:
        code:
          type: string
          example: RPMSE0001
        message:
          type: string
          example: Business Error occured
        type:
          type: string
          example: error
  securitySchemes:
    apiKey:
      type: apiKey
      name: API-Key
      in: header
